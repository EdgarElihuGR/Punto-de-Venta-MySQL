<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="botonAgregarProdAVender.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAABBCAYAAACO98lFAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4gsDAzIxTNVkxAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAC2SURBVHhe
        7dTBCYQwAEVBS9gOtv8qdye3CDkbIW/gHwyC8kCvjT72mzauj1MEikARKAJFoAgUgSJQBIpAESgCRaAI
        FIEiUASKQBEoAkWgCBSBIlAEikARKAKvijAevmNfmyOM69V9T+z2IqdueXjaloenbfmNPLFX/RN2GQ+f
        I2x9mV2KQBEoAkWgCBSBIlAEikARKAJFoAgUgSJQBIpAESgCRaAIFIEiUASKQBEoAkXgJRGu6w8LE4sP
        J8sKPgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="iconoCerrarProductosAVender.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4gsBEzYSPPG7SQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAELSURBVFhH
        vY7bDYJAFET5UGuwDrujBkvx/WcHlmC0CFvQGcMkKyCw7L33JJMsC8yZClyRG7LmQxB00Un39/BG7kjE
        CDroopPunwvvEX9dESNGHZ4jJnd7jMjutBwxu8tiRHFHSUGxXMwpMpOLnEJzuZhS7CYXQwJ3uegThclF
        WxgqFxQ9EIoZnsPkZIO8EA3gmXchpPJLk7ARbfmqSciIVH5GlojgmXduI4bkwm1EKj8hfXLBd/zGbESO
        XJiNmCMXxSNS+RHJkQv+w3+zR1jIRfaIVH5ASuSCHewaHdGWLxAr2DU4IpXvEUu5YCe7OyMi5KJ3xLO5
        2CGeckEHXXTSXdXIFomQC7rgrOoPBXerbUlViT8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnBuscarProdV.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4goKBycCg9EtIAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJSSURBVFhH
        7Za/S1dRGIctiIKQInIIEhRb3FoaWtRJov6CnIwGQ9qEEKK5raEhApccWkIlokknK1BMcA/BBBvakoh+
        QD+e58KBy+XcPN57Dy194OHLOd9z3/Oe95zzvqcnQcfhKjyGNdiFb/ARtmABbkAfdKoTMAuf4HeFL5G+
        nzAP/dBaI+BKNfwLXsMDuA4X4AichStwD17APjj+K9yBxroFP0Bj2zAKKToHLyFE5CkYxUPJycOqH8JJ
        OKwmIWzbczBaSTLsrtzJr9nRQufhA+jEfTsOkqEKe+7Ku5CL0J5ctuNv8rQ70D1vEvY6PQHtvipaNfKe
        u2eGPvXApeo07IFOjNkRk0nGAV61HLoL2q/dWjOcA7znOTQO2t8pWhGZXh1gksmhM6B9OWVHVeH0m+Fy
        ycPtHMNFqyILi7k9OWE00BLoQPSQW9X809yeS5vgHANFqyJLqn9aWHLIa/4dLFbRKD8DHbCq5dAl0P6b
        ohWRxcMBltQcmgbtPypaEbn3PiYMkSW1SxnyVdCBCTvq5EvGQdbzLnUbtPsWjtpRJ59RvmQc7JZ0oSHw
        ehtdz8GB8hmlAxYm63kbuVoroPZM9cnyGeVHVrCm13IQwr5bYW0ny4eJzyg/ljnohVRNwWcIk/u7DtEa
        UCdPrs+o4MR7mAHredXQMbgIN2EFHO+eG3ZX7uSNnFA+o8I+BlzVO1iEDbCOlP/3tJcPnJO2ckK5ch8T
        1vPyZGLuMMOZZLznsavWiRNBfmxJtapZWFIraKdONNV/J4LKTnhz/ol0gsl7lv8AmgWzL+qRx90AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>